1-1:SELECT title, description FROM film;
1-2:SELECT * FROM film WHERE length>60 AND length<75;
1-3:WHERE rental_rate=0.99 AND replacement_cost=12.99 OR replacement_cost=28.99;
1-4:WHERE first_name='Mary';
1-5:SELECT * FROM film WHERE length <= 50 AND NOT (rental_rate = 2.99 OR rental_rate = 4.99);

2-1:SELECT * FROM film WHERE replacement_cost BETWEEN 12.99 AND 16.99;
2-2:SELECT first_name, last_name FROM actor WHERE first_name IN ('Penelope', 'Nick', 'Ed');
2-3:SELECT * FROM film WHERE rental_rate IN (0.99, 2.99, 4.99) AND replacement_cost IN (12.99, 15.99, 28.99);

3-1:SELECT * FROM country WHERE country LIKE 'A%a';
3-2:SELECT country FROM country WHERE country LIKE '_____%n';
3-3:SELECT title FROM film WHERE title ILIKE 't%t%t%t%';
3-4:SELECT * FROM film WHERE title LIKE 'C%' AND length > 90 AND rental_rate = 2.99;

4-1:SELECT DISTINCT replacement_cost FROM film;
4-2:SELECT COUNT (DISTINCT replacement_cost) FROM film;
4-3:WHERE title LIKE 'T%' AND rating = 'G';
4-4:SELECT COUNT(*) FROM country WHERE country LIKE '_____';
4-5:SELECT COUNT(*) FROM city WHERE city ILIKE '%r';

5-1:SELECT title, length FROM film WHERE title LIKE '%n' ORDER BY length DESC LIMIT 5;
5-2:SELECT title, length FROM film WHERE title LIKE '%n' ORDER BY length ASC OFFSET 5 LIMIT 5;
5-3:SELECT * FROM customer WHERE store_id = 1 ORDER BY last_name DESC LIMIT 4;

6-1:SELECT ROUND(AVG(rental_rate), 3) FROM film;
6-2:SELECT COUNT(*) FROM film WHERE title LIKE 'C%';
6-3:SELECT MAX(length) FROM film WHERE rental_rate = 0.99;
6-4:SELECT COUNT(DISTINCT replacement_cost) FROM film WHERE length > 150;

7-1:SELECT rating FROM film GROUP BY rating;
7-2:SELECT replacement_cost, COUNT() FROM film GROUP BY replacement_cost HAVING COUNT() >50;
7-3:SELECT store_id, COUNT(*) FROM customer GROUP BY store_id;
7-4:SELECT country_id, COUNT(*) FROM city GROUP BY country_id ORDER BY COUNT DESC LIMIT 1;

9-1:SELECT city, country FROM country INNER JOIN city ON city.country_id = country.country_id;
9-2:SELECT payment_id, first_name, last_name FROM customer INNER JOIN payment ON payment.customer_id = customer.customer_id;
9-3:SELECT rental_id, first_name, last_name FROM customer INNER JOIN rental ON rental.customer_id = customer.customer_id;

10-1:SELECT city, country FROM city LEFT JOIN country ON city.country_id = country.country_id;
10-2:SELECT payment_id, first_name, last_name FROM payment RIGHT JOIN customer ON payment.customer_id = customer.customer_id ORDER BY payment_id;
10-3:SELECT rental_id, first_name, last_name FROM customer FULL JOIN rental ON rental.customer_id = customer.customer_id ORDER BY first_name;

11-1:(SELECT first_name FROM actor) UNION (SELECT first_name FROM customer);
11-2:(SELECT first_name FROM actor) INTERSECT (SELECT first_name FROM customer);
11-3:(SELECT first_name FROM actor) EXCEPT (SELECT first_name FROM customer);
11-4:(SELECT first_name FROM actor) UNION ALL (SELECT first_name FROM customer);

12-1:SELECT COUNT(*) FROM film WHERE length > ( SELECT AVG(length) FROM film );
12-2:SELECT COUNT(*) FROM film WHERE rental_rate = ( SELECT MAX(rental_rate) FROM film );
12-3:SELECT * FROM film WHERE rental_rate = (SELECT MIN(rental_rate) FROM FILM) AND replacement_cost = (SELECT MIN(replacement_cost) FROM film);
12-4:SELECT first_name FROM customer WHERE customer_id = ANY ( SELECT customer_id FROM payment WHERE amount = ( SELECT MAX(amount) FROM payment ));